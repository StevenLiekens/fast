// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fast_api.EntityFramework;

namespace fast_api.Migrations
{
    [DbContext(typeof(FastContext))]
    partial class FastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("fast_api.EntityFramework.CurrencyTrade", b =>
                {
                    b.Property<int>("CurrencyTradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Buy")
                        .HasColumnType("int");

                    b.Property<int>("CoinCost")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ItemAmount")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SelectionContainerAmount")
                        .HasColumnType("int");

                    b.Property<int?>("SelectionContainerId")
                        .HasColumnType("int");

                    b.Property<int>("Sell")
                        .HasColumnType("int");

                    b.HasKey("CurrencyTradeId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SelectionContainerId");

                    b.ToTable("CurrencyTrades");
                });

            modelBuilder.Entity("fast_api.EntityFramework.CurrencyTradeCost", b =>
                {
                    b.Property<int>("CurrencyTradeCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CurrencyTradeId")
                        .HasColumnType("int");

                    b.HasKey("CurrencyTradeCostId");

                    b.HasIndex("CurrencyTradeId");

                    b.ToTable("CurrencyTradeCosts");
                });

            modelBuilder.Entity("fast_api.EntityFramework.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Buy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sell")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("fast_api.EntityFramework.SelectionContainer", b =>
                {
                    b.Property<int>("SelectionContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Buy")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sell")
                        .HasColumnType("int");

                    b.HasKey("SelectionContainerId");

                    b.ToTable("SelectionContainers");
                });

            modelBuilder.Entity("fast_api.EntityFramework.SelectionContainerItem", b =>
                {
                    b.Property<int>("SelectionContainerId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Guaranteed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.HasKey("SelectionContainerId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("SelectionContainerItems");
                });

            modelBuilder.Entity("fast_api.EntityFramework.CurrencyTrade", b =>
                {
                    b.HasOne("fast_api.EntityFramework.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("fast_api.EntityFramework.SelectionContainer", "SelectionContainer")
                        .WithMany()
                        .HasForeignKey("SelectionContainerId");
                });

            modelBuilder.Entity("fast_api.EntityFramework.CurrencyTradeCost", b =>
                {
                    b.HasOne("fast_api.EntityFramework.CurrencyTrade", "CurrencyTrade")
                        .WithMany("CurrencyTradeCost")
                        .HasForeignKey("CurrencyTradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fast_api.EntityFramework.SelectionContainerItem", b =>
                {
                    b.HasOne("fast_api.EntityFramework.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fast_api.EntityFramework.SelectionContainer", "SelectionContainer")
                        .WithMany("SelectionContainerItems")
                        .HasForeignKey("SelectionContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
